
static-generators.minNewRequestCount = 10
static-generators.maxNewRequestCount = 20

dynamic-generators.minNewRequestCount = 5
dynamic-generators.maxNewRequestCount = 30

maxCountListenersInGroup = 10
minCountListenersInGroup = 5
optimalCountListenersInGroup = 7

maxCountListenersInCourse = 30

simulationTimeInTwoWeeks = 6


server.port=8087


#FATAL < ERROR < WARN < INFO < DEBUG < TRACE < ALL
#FATAL
#FATAL , ERROR
#FATAL , ERROR , WARNStat
#FATAL , ERROR , WARN , INFO
#FATAL , ERROR , WARN , INFO , DEBUG
#FATAL , ERROR , WARN , INFO , DEBUG , TRACE
#FATAL , ERROR , WARN , INFO , DEBUG , TRACE , ALL

logging.level.org.sinhro.ForeignLanguageCourses.service = info

#info - количество заявок
#debug - будет перечислять заявки
logging.level.org.sinhro.ForeignLanguageCourses.service.NewRequestsGeneratorService = info

#info
#debug - перечисление всех заявок на очереди
logging.level.org.sinhro.ForeignLanguageCourses.service.RequestsHandlerService = info

#info - только количество
#debug - вывод создания каждого слушателя
#debug - вывод удаления каждого прослушивающего
logging.level.org.sinhro.ForeignLanguageCourses.service.ListenerService = debug

#info - только выручка
logging.level.org.sinhro.ForeignLanguageCourses.service.StatisticService = info

logging.level.org.hibernate = info

#Для вывода логики расчёта количества новых заявок
#logging.level.org.sinhro.ForeignLanguageCourses.service.requestGenerator.UsingOrderRequestGeneratorDynamic = trace

logging.file.path="/logs/
logging.file.name=logs.txt


spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/enterpriseJava
spring.datasource.username=enterpriseJavaSpringApp
spring.datasource.password=1234

spring.jpa.hibernate.ddl-auto=update
